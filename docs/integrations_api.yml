swagger: '2.0'
info:
  title: Deployments
  version: '0.1'
  description: |
    An API for deployments and firmware images management.
    Intended for use by the web GUI.

host: 'docker.mender.io:8080'
basePath: '/api/integrations/0.1/deployments'
schemes:
  - https

responses:
  NotFoundError: # 404
    description: Not Found.
    schema:
      $ref: "#/definitions/Error"
  InternalServerError: # 500
    description: Internal Server Error.
    schema:
      $ref: "#/definitions/Error"
  InvalidRequestError: # 400
    description: Invalid Request.
    schema:
      $ref: "#/definitions/Error"
  UnprocessableEntityError: # 422
    description: Unprocessable Entity.
    schema:
      $ref: "#/definitions/Error"

paths:
  /deployments:
    get:
      summary: Find all deployments
      description: |
        Returns a filtered collection of deployments in the system,
        including active and historical. If both 'status' and 'query' are
        not specified, all devices are listed.
      parameters:
        - name: status
          in: query
          description: Deployment status filter.
          required: false
          type: string
          enum:
            - inprogress
            - finished
            - pending
        - name: search
          in: query
          description: Deployment name or description filter.
          required: false
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          examples:
            application/json:
              - created: 2016-02-11T13:03:17.063493443Z
                status: finished
                name: production
                artifact_name: Application 0.0.1
                id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
                finished: 2016-03-11T13:03:17.063493443Z
          schema:
            type: array
            items:
              $ref: '#/definitions/Deployment'
        400:
          $ref: "#/responses/InvalidRequestError"
        500:
          $ref: "#/responses/InternalServerError"

    post:
      summary: Create a deployment
      description: |
        Deploy software to specified devices. Image is auto assigned to the
        device from all available images based on artifact name and device type.
        Devices for which there are no compatible images to be installed are
        considered finished successfully as well as receive status of `noimage`.

      parameters:
        - name: deployment
          in: body
          description: New deployment that needs to be created.
          required: true
          schema:
            $ref: "#/definitions/NewDeployment"
      produces:
        - application/json
      responses:
        201:
          description: New deployment created.
          headers:
            Location:
              description: URL of the newly created deployment.
              type: string
        400:
          $ref: "#/responses/InvalidRequestError"
        500:
          $ref: "#/responses/InternalServerError"

  /deployments/{id}:
    get:
      summary: Get the details of a selected deployment
      description: |
        Returns the details of a particular deployment.
      parameters:
        - name: id
          in: path
          description: Deployment identifier.
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          examples:
            application/json:
              created: 2016-02-11T13:03:17.063493443Z
              name: production
              artifact_name: Application 0.0.1
              id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
              finished: 2016-03-11T13:03:17.063493443Z
          schema:
            $ref: "#/definitions/Deployment"
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  /deployments/{deployment_id}/status:
    put:
      summary: Abort the deployment
      description: |
        Aborts the deployment that is pending or in progress. For devices included in this deployment it means that:
        - Devices that have completed the deployment (i.e. reported final status) are not affected by the abort, and their original status is kept in the deployment report.
        - Devices that do not yet know about the deployment at time of abort will not start the deployment.
        - Devices that are in the middle of the deployment at time of abort will finish its deployment normally, but they will not be able to change its deployment status so they will perform rollback.
      parameters:
        - name: deployment_id
          in: path
          description: Deployment identifier.
          required: true
          type: string
        - name: Status
          in: body
          description: Deployment status.
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                - aborted
            required:
              - status
      produces:
        - application/json
      responses:
        204:
            description: Status updated successfully.
        400:
            $ref: "#/responses/InvalidRequestError"
        404:
            $ref: "#/responses/NotFoundError"
        422:
            $ref: "#/responses/UnprocessableEntityError"
        500:
            $ref: "#/responses/InternalServerError"

  /deployments/{deployment_id}/statistics:
    get:
      summary: Get the statistics of a selected deployment
      description: |
        Returns the statistics of a selected deployment statuses.
      parameters:
        - name: deployment_id
          in: path
          description: Deployment identifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          examples:
            application/json:
              success: 3
              pending: 1
              failure: 0
              downloading: 1
              installing: 2
              rebooting: 3
              noimage: 0
              already-installed: 0
              aborted: 0
          schema:
            $ref: "#/definitions/DeploymentStatistics"
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  /deployments/{deployment_id}/devices:
    get:
      summary: List devices of a deployment
      description: |
        Returns a collection of a selected deployment's status for each assigned device.
      parameters:
        - name: deployment_id
          in: path
          description: Deployment identifier.
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          examples:
            application/json:
              - id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
                finished: 2016-03-11T13:03:17.063493443Z
                status: pending
                created: 2016-02-11T13:03:17.063493443Z
                device_type: Raspberry Pi 3
          schema:
            type: array
            items:
              $ref: "#/definitions/Device"
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  /deployments/{deployment_id}/devices/{device_id}/log:
    get:
      summary: Get the log of a selected device's deployment
      description: |
        Returns the log of a selected device, collected during a particular deployment.
      parameters:
        - name: deployment_id
          in: path
          description: Deployment identifier.
          required: true
          type: string
        - name: device_id
          in: path
          description: Device identifier.
          required: true
          type: string
      produces:
        - text/plain
      responses:
        200:
          description: Successful response.
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  /images:
    get:
      summary: List known firmware images
      description: |
        Returns a collection of all firmware images.
      produces:
        - application/json
      responses:
        200:
          description: OK
          examples:
            application/json:
              - name: MySecretApp v2
                description: Johns Monday test build
                checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                device_type: Beagle Bone
                id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                verified: false
                modified: 2016-03-11T13:03:17.063493443Z
                yocto_id: core-image-full-cmdline-20160330201408
          schema:
            type: array
            items:
              $ref: "#/definitions/Image"

        500:
          $ref: "#/responses/InternalServerError"

    post:
      summary: Create a firmware image
      description: |
        Creates firmware image. Mulitpart request with meta and image.
      consumes:
        - multipart/form-data
      parameters:
        - name: name
          in: formData
          required: true
          type: string
        - name: description
          in: formData
          required: false
          type: string
        - name: firmware
          in: formData
          description: Firmware image. It has to be the last part of request.
          required: true
          type: file
      produces:
        - application/json
      responses:
        201:
          description: Image created.
          headers:
            Location:
              description: URL of the newly created image.
              type: string
        400:
          $ref: "#/responses/InvalidRequestError"
        500:
          $ref: "#/responses/InternalServerError"

  /images/{id}:
    get:
      summary: Get the details of a selected firmare image
      description: |
        Returns the details of a selected firmware image.
      parameters:
        - name: id
          in: path
          description: Image identifier.
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/Image"
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

    put:
      summary: Update name and description of a selected firmware image
      description: |
        Edit image name and description. Image is not allowed to be edited if it was used
        in any deployment.
      parameters:
        - name: id
          in: path
          description: Image identifier.
          required: true
          type: string
        - name: image
          in: body
          schema:
            $ref: "#/definitions/ImageUpdate"
      produces:
        - application/json
      responses:
        204:
          description: The image metadata updated successfully.
        400:
          $ref: "#/responses/InvalidRequestError"
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

    delete:
      summary: Delete the firmware image
      description: |
        Deletes the firmware image from file and images storage. Deployments
        in progress can not be deleted until deployment finishes.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Image identifier.
          required: true
          type: string
      responses:
        204:
          description: The imagae deleted successfully.
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  /images/{id}/download:
    get:
      summary: Get the download link of a selected firmware image
      description: |
        Generates signed URL for downloading image file. URI can be used only
        with GET HTTP method. Link supports such HTTP headers: 'Range',
        'If-Modified-Since', 'If-Unmodified-Since' It is valid for specified
        period of time.

        To be able to recieve download link, image file have to be uploaded
        first.
      parameters:
        - name: id
          in: path
          description: Image identifier.
          required: true
          type: string
        - name: expire
          in: query
          description: |
            Link validity length in minutes. Min 1 minute, max 10080 (1 week).
          required: false
          type: integer
          default: 60
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/ImageLink"
        400:
          $ref: "#/responses/InvalidRequestError"
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

definitions:
  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
      request_id:
        description: Request ID (same as in X-MEN-RequestID header).
        type: string
    example:
      application/json:
          error: "failed to decode device group data: JSON payload is empty"
          request_id: "f7881e82-0492-49fb-b459-795654e7188a"
  NewDeployment:
    type: object
    properties:
      name:
        type: string
      artifact_name:
        type: string
      devices:
        type: array
        items:
          type: string
          description: An array of devices' identifiers.
    required:
      - name
      - artifact_name
      - devices
    example:
      application/json:
        - name: production
          artifact_name: Application 0.0.1
          devices:
            - 00a0c91e6-7dec-11d0-a765-f81d4faebf6
  Deployment:
    type: object
    properties:
      created:
        type: string
        format: date-time
      name:
        type: string
      artifact_name:
        type: string
      id:
        type: string
      finished:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - inprogress
          - pending
          - finished
    required:
      - created
      - name
      - artifact_name
      - id
      - status
    example:
      application/json:
        created: 2016-02-11T13:03:17.063493443Z
        status: finished
        name: production
        artifact_name: Application 0.0.1
        id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
        finished: 2016-03-11T13:03:17.063493443Z
  DeploymentStatistics:
    type: object
    properties:
      success:
        type: integer
        description: Number of successful deployments.
      pending:
        type: integer
        description: Number of pending deployments.
      downloading:
        type: integer
        description: Number of deployments being downloaded.
      rebooting:
        type: integer
        description: Number of deployments devices are rebooting into.
      installing:
        type: integer
        description: Number of deployments devices being installed.
      failure:
        type: integer
        description: Number of failed deployments.
      noimage:
        type: integer
        description: Do not have apropriate image for device type.
      already-installed:
        type: integer
        description: Number of devices unaffected by upgrade, since they are already running the specified software version.
      aborted:
        type: integer
        description: Number of deployments aborted by user.
    required:
      - success
      - pending
      - downloading
      - installing
      - rebooting
      - failure
      - noimage
      - already-installed
      - aborted
    example:
      application/json:
        success: 3
        pending: 1
        failure: 0
        downloading: 1
        installing: 2
        rebooting: 3
        noimage: 0
        already-installed: 0
        aborted: 0
  Device:
    type: object
    properties:
      id:
        type: string
        description: Device idenfifier.
      finished:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - inprogress
          - pending
          - success
          - failure
          - noimage
      created:
        type: string
        format: date-time
      device_type:
        type: string
    required:
      - id
      - status
      - device_type
    example:
      application/json:
        - id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
          finished: 2016-03-11T13:03:17.063493443Z
          status: pending
          created: 2016-02-11T13:03:17.063493443Z
          device_type: Raspberry Pi 3
  ImageBase:
    description: Base firmware image.
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      checksum:
        type: string
      device_type:
        type: string
      date_build:
        type: string
        format: date-time
      image_size:
        type: integer
    required:
      - name
      - description
      - device_type
      - checksum
  ImageUpdate:
    description: Firmware image information update.
    type: object
    properties:
      name:
        type: string
      description:
        type: string
    required:
      - name
      - description
    example:
      name: Image name
      description: Some description
  Image:
    description: Detailed firmware image.
    type: object
    allOf:
      - $ref: "#/definitions/ImageBase"
      - type: object
        properties:
          id:
            type: string
          verified:
            type: boolean
          modified:
            type: string
            format: date-time
            description: |
              Represents creation / last edition of any of the image properties.
        required:
          - id
          - verified
          - modified
    example:
      application/json:
        name:  123
        description:  123
        yocto_id:  core-image-minimal-201608110900
        device_type:  vexpress-qemu
        checksum:  2804c37d5b4e19cc987d42cddf2df7d07563d683abe7d65e8be2911831be5b88
        image_size: 0
        date_build:  2016-09-29T10:45:34Z
        id:  67565d4c-5534-4a09-baff-079f3c0a06f8
        verified: false
        modified:  2016-10-06T07:24:19.024Z
  ImageLink:
    description: URL for firmare image download.
    type: object
    properties:
      uri:
        type: string
      expire:
        type: string
        format: date-time
    required:
      - uri
      - expire
    example:
      application/json:
        uri: http://mender.io/image.tar.gz
        expire: 2016-10-29T10:45:34Z
